<?php

/**
 * BaseMateriel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom
 * @property string $reference
 * @property string $description
 * @property Doctrine_Collection $Stock
 * @property Doctrine_Collection $Emprunt
 * @property Doctrine_Collection $Assemblage
 * 
 * @method string              getNom()         Returns the current record's "nom" value
 * @method string              getReference()   Returns the current record's "reference" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getStock()       Returns the current record's "Stock" collection
 * @method Doctrine_Collection getEmprunt()     Returns the current record's "Emprunt" collection
 * @method Doctrine_Collection getAssemblage()  Returns the current record's "Assemblage" collection
 * @method Materiel            setNom()         Sets the current record's "nom" value
 * @method Materiel            setReference()   Sets the current record's "reference" value
 * @method Materiel            setDescription() Sets the current record's "description" value
 * @method Materiel            setStock()       Sets the current record's "Stock" collection
 * @method Materiel            setEmprunt()     Sets the current record's "Emprunt" collection
 * @method Materiel            setAssemblage()  Sets the current record's "Assemblage" collection
 * 
 * @package    gigm-materiel
 * @subpackage model
 * @author     Emilien Kenler
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseMateriel extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('materiel');
        $this->hasColumn('nom', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('reference', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Stock', array(
             'local' => 'id',
             'foreign' => 'materiel_id'));

        $this->hasMany('Emprunt', array(
             'local' => 'id',
             'foreign' => 'materiel_id'));

        $this->hasMany('Assemblage', array(
             'local' => 'id',
             'foreign' => 'materiel_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}